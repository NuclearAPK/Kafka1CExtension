&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(ТекущийОбъект.КаталогЛогов) Тогда
		РазделительПути = ПолучитьРазделительПутиСервера();
		Если НЕ СтрЗаканчиваетсяНа(ТекущийОбъект.КаталогЛогов, РазделительПути) Тогда
			ТекущийОбъект.КаталогЛогов = ТекущийОбъект.КаталогЛогов + РазделительПути;		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокТопиковБрокера(Брокер) 
	
	СписокТопиков = Новый СписокЗначений;
	
	ДополнительныеПараметры = Новый Структура("ПараметрыПодключения", Новый Соответствие);
	
	Для каждого Параметр Из Брокер.ПараметрыПодключения Цикл
		ДополнительныеПараметры.ПараметрыПодключения.Вставить(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	ДанныеТопиков = KFK_Интеграция.ПолучитьДанныеТопиковБрокера(Брокер.АдресБрокера, ДополнительныеПараметры); 
	
	Для каждого СтрокаТопика Из ДанныеТопиков Цикл
		СписокТопиков.Добавить(СтрокаТопика.Топик, СтрокаТопика.Топик);	
	КонецЦикла;
	
	Возврат СписокТопиков;
	
КонецФункции

&НаКлиенте
Процедура ТопикиБрокерПриИзменении(Элемент) 
	
	ТекущиеДанные = Элементы.Топики.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;     
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Брокер) Тогда
		Возврат;	
	КонецЕсли;
	
	СписокТопиков = СписокТопиковБрокера(ТекущиеДанные.Брокер);      
	Элементы.Топики.ПодчиненныеЭлементы.ТопикиТопик.СписокВыбора.ЗагрузитьЗначения(СписокТопиков.ВыгрузитьЗначения());  
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)                             
	// TODO: нужно актуализировать списки топиков для конкретного брокера, указанного в строке

КонецПроцедуры

&НаКлиенте
Процедура СинхронноПриИзменении(Элемент)     
	
	ПараметрыОтправки = KFK_ИнтеграцияКлиент.ПолучитьПараметрыСинхроннойОтправки();	
	
	Для каждого ЭлементПараметра Из ПараметрыОтправки Цикл
		Если Объект.Синхронно Тогда	 
			НоваяСтрока = Объект.ПараметрыПродюсера.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементПараметра);
		Иначе                         
			КоличествоПараметров = Объект.ПараметрыПродюсера.Количество(); 
			Для к = 0 по КоличествоПараметров - 1 Цикл
				Если ПараметрыОтправки.Получить(Объект.ПараметрыПродюсера[КоличествоПараметров - 1 - к].Ключ) <> Неопределено Тогда
					Объект.ПараметрыПродюсера.Удалить(КоличествоПараметров - 1 - к);		
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;                                                 
	
КонецПроцедуры   

