#Область ОбработчикиСобытийФормы
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)         
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда      
		Объект_ = РеквизитФормыВЗначение("Объект");
		РасписаниеРегламентногоЗадания = Объект_.РасписаниеЗадания.Получить(); 
	КонецЕсли;
	
КонецПроцедуры            

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	СписокТопиков.ЗагрузитьЗначения(
		KFK_ИнтеграцияВызовСервера.ЗаполнитьСписокВыбораТопиков(Объект.Брокер).ВыгрузитьЗначения());

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)     
	
	ОбновитьПредставлениеРасписания();    
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Хранилище = Новый ХранилищеЗначения(РасписаниеРегламентногоЗадания);
	ТекущийОбъект.РасписаниеЗадания = Хранилище;      
	
	Если ЗначениеЗаполнено(ТекущийОбъект.КаталогЛогов) Тогда
		РазделительПути = ПолучитьРазделительПутиСервера();
		Если НЕ СтрЗаканчиваетсяНа(ТекущийОбъект.КаталогЛогов, РазделительПути) Тогда
			ТекущийОбъект.КаталогЛогов = ТекущийОбъект.КаталогЛогов + РазделительПути;		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы	
	
&НаКлиенте
Процедура НастроитьРасписаниеРегламентногоЗадания(Команда)
	
	РедактированиеРасписанияРегламентногоЗадания();
	ОбновитьПредставлениеРасписания();

КонецПроцедуры     

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗадания()
	
	// Если расписание не инициализировано в форме на сервере, то создаем новое.
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	// Открываем диалог для редактирования Расписания.
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеРасписанияРегламентногоЗаданияЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗаданияЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Расписание;
		
	КонецЕсли;    
	
	ОбновитьПредставлениеРасписания();	   
	
КонецПроцедуры      

&НаКлиенте
Процедура ТопикиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущийЭлемент.СписокВыбора.ЗагрузитьЗначения(СписокТопиков.ВыгрузитьЗначения()); 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура БрокерПриИзменении(Элемент)   
	
	БрокерПриИзмененииСервер();      
	
КонецПроцедуры              

Процедура БрокерПриИзмененииСервер()      
	
	СписокТопиков.ЗагрузитьЗначения(
		KFK_ИнтеграцияВызовСервера.ЗаполнитьСписокВыбораТопиков(Объект.Брокер).ВыгрузитьЗначения());
		
КонецПроцедуры    
	
&НаКлиенте
Процедура ТопикиТопикНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.ЗагрузитьЗначения(СписокТопиков.ВыгрузитьЗначения());
КонецПроцедуры
	
&НаКлиенте
Процедура ТопикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)   
	
	Если Элементы.Топики.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;    
	
	Если НЕ ЗначениеЗаполнено(Элементы.Топики.ТекущиеДанные.Топик) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;   
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Топик", Элементы.Топики.ТекущиеДанные.Топик);
	
	ОткрытьФорму("ОбщаяФорма.KFK_ФормаТопика", ПараметрыОткрытия, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьАвтокоммитыПриИзменении(Элемент)        
	
	ПараметрыПолучения = KFK_ИнтеграцияКлиент.ПолучитьПараметрыОтключенияАвтофиксацииСмещений();	
	
	Для каждого ЭлементПараметра Из ПараметрыПолучения Цикл
		Если Объект.ОтключитьАвтокоммиты Тогда	 
			НоваяСтрока = Объект.ПараметрыКонсьюмера.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементПараметра);
		Иначе                         
			КоличествоПараметров = Объект.ПараметрыКонсьюмера.Количество(); 
			Для к = 0 по КоличествоПараметров - 1 Цикл
				Если ПараметрыПолучения.Получить(Объект.ПараметрыКонсьюмера[КоличествоПараметров - 1 - к].Ключ) <> Неопределено Тогда
					Объект.ПараметрыКонсьюмера.Удалить(КоличествоПараметров - 1 - к);		
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;      

КонецПроцедуры

#КонецОбласти                    

#Область СлужебныеПроцедурыИФункции          

&НаКлиенте
Процедура ОбновитьПредставлениеРасписания()
	
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗадания);
	
	Если ПредставлениеРасписания = Строка(Новый РасписаниеРегламентногоЗадания) Тогда
		
		ПредставлениеРасписания = НСтр("ru = 'Расписание не задано'");
		
	КонецЕсли;
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
	
КонецПроцедуры


#КонецОбласти 



