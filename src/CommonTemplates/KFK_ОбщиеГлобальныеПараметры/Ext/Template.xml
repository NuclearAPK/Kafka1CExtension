<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://v8.1c.ru/8.2/data/spreadsheet" xmlns:style="http://v8.1c.ru/8.1/data/ui/style" xmlns:v8="http://v8.1c.ru/8.1/data/core" xmlns:v8ui="http://v8.1c.ru/8.1/data/ui" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<languageSettings>
		<currentLanguage>ru</currentLanguage>
		<defaultLanguage>ru</defaultLanguage>
		<languageInfo>
			<id>ru</id>
			<code>Русский</code>
			<description>Русский</description>
		</languageInfo>
	</languageSettings>
	<columns>
		<size>5</size>
		<columnsItem>
			<index>0</index>
			<column>
				<formatIndex>1</formatIndex>
			</column>
		</columnsItem>
		<columnsItem>
			<index>1</index>
			<column>
				<formatIndex>2</formatIndex>
			</column>
		</columnsItem>
		<columnsItem>
			<index>2</index>
			<column>
				<formatIndex>3</formatIndex>
			</column>
		</columnsItem>
		<columnsItem>
			<index>3</index>
			<column>
				<formatIndex>4</formatIndex>
			</column>
		</columnsItem>
		<columnsItem>
			<index>4</index>
			<column>
				<formatIndex>5</formatIndex>
			</column>
		</columnsItem>
	</columns>
	<rowsItem>
		<index>0</index>
		<row>
			<c>
				<c>
					<f>6</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Параметр</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>7</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Допустимый диапазон</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>8</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Значение по умолчанию</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>9</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Влияние</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>10</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Описание</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>1</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>builtin.features</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>gzip, snappy, ssl, sasl, regex, lz4, sasl_gssapi, sasl_plain, sasl_scram, plugins, zstd, sasl_oauthbearer, http, oidc</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Indicates the builtin features for this build of librdkafka. An application can either query this value or attempt to set it with its list of required features to check for library support.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>2</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>client.id</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>rdkafka</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Client identifier.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>3</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>metadata.broker.list</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Initial list of brokers as a CSV list of broker host or host:port. The application may also use rd_kafka_brokers_add() to add brokers during runtime.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>4</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>bootstrap.servers</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Alias for metadata.broker.list: Initial list of brokers as a CSV list of broker host or host:port. The application may also use rd_kafka_brokers_add() to add brokers during runtime.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>5</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>message.max.bytes</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1000 .. 1000000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Maximum Kafka protocol request message size. Due to differing framing overhead between protocol versions the producer is unable to reliably enforce a strict max message limit at produce time and may exceed the maximum size by one message in protocol ProduceRequests, the broker will enforce the the topic's max.message.bytes limit (see Apache Kafka documentation).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>6</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>message.copy.max.bytes</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 1000000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>65535</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Maximum size for message to be copied to buffer. Messages larger than this will be passed by reference (zero-copy) at the expense of larger iovecs.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>7</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>receive.message.max.bytes</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1000 .. 2147483647</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>100000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Maximum Kafka protocol response message size. This serves as a safety precaution to avoid memory exhaustion in case of protocol hickups. This value must be at least fetch.max.bytes + 512 to allow for protocol overhead; the value is adjusted automatically unless the configuration property is explicitly set.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>8</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>max.in.flight.requests.per.connection</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1 .. 1000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Maximum number of in-flight requests per broker connection. This is a generic property applied to all broker communication, however it is primarily relevant to produce requests. In particular, note that other mechanisms limit the number of outstanding consumer fetch request per broker to one.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>9</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>max.in.flight</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1 .. 1000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Alias for max.in.flight.requests.per.connection: Maximum number of in-flight requests per broker connection. This is a generic property applied to all broker communication, however it is primarily relevant to produce requests. In particular, note that other mechanisms limit the number of outstanding consumer fetch request per broker to one.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>10</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>topic.metadata.refresh.interval.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>-1 .. 3600000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>300000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Period of time in milliseconds at which topic and broker metadata is refreshed in order to proactively discover any new brokers, topics, partitions or partition leader changes. Use -1 to disable the intervalled refresh (not recommended). If there are no locally referenced topics (no topic objects created, no messages produced, no subscription or no assignment) then only the broker list will be refreshed every interval but no more often than every 10s.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>11</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>metadata.max.age.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1 .. 86400000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>900000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Metadata cache max age. Defaults to topic.metadata.refresh.interval.ms * 3</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>12</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>topic.metadata.refresh.fast.interval.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1 .. 60000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>100</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>When a topic loses its leader a new metadata request will be enqueued immediately and then with this initial interval, exponentially increasing upto retry.backoff.max.ms, until the topic metadata has been refreshed. If not set explicitly, it will be defaulted to retry.backoff.ms. This is used to recover quickly from transitioning leader brokers.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>13</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>topic.metadata.refresh.fast.cnt</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 1000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>10</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>DEPRECATED No longer used.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>14</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>topic.metadata.refresh.sparse</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Sparse metadata requests (consumes less network bandwidth)</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>15</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>topic.metadata.propagation.max.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 3600000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>30000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Apache Kafka topic creation is asynchronous and it takes some time for a new topic to propagate throughout the cluster to all brokers. If a client requests topic metadata after manual topic creation but before the topic has been fully propagated to the broker the client is requesting metadata from, the topic will seem to be non-existent and the client will mark the topic as such, failing queued produced messages with ERR__UNKNOWN_TOPIC. This setting delays marking a topic as non-existent until the configured propagation max time has passed. The maximum propagation time is calculated from the time the topic is first referenced in the client, e.g., on produce().</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>16</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>topic.blacklist</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Topic blacklist, a comma-separated list of regular expressions for matching topic names that should be ignored in broker metadata information as if the topics did not exist.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>17</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>debug</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>generic, broker, topic, metadata, feature, queue, msg, protocol, cgrp, security, fetch, interceptor, plugin, consumer, admin, eos, mock, assignor, conf, all</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>A comma-separated list of debug contexts to enable. Detailed Producer debugging: broker,topic,msg. Consumer: consumer,cgrp,topic,fetch</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>18</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket.timeout.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>10 .. 300000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>60000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Default timeout for network requests. Producer: ProduceRequests will use the lesser value of socket.timeout.ms and remaining message.timeout.ms for the first message in the batch. Consumer: FetchRequests will use fetch.wait.max.ms + socket.timeout.ms. Admin: Admin requests will use socket.timeout.ms or explicitly set rd_kafka_AdminOptions_set_operation_timeout() value.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>19</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket.blocking.max.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1 .. 60000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>DEPRECATED No longer used.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>20</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket.send.buffer.bytes</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 100000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Broker socket send buffer size. System default is used if 0.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>21</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket.receive.buffer.bytes</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 100000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Broker socket receive buffer size. System default is used if 0.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>22</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket.keepalive.enable</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Enable TCP keep-alives (SO_KEEPALIVE) on broker sockets</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>23</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket.nagle.disable</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Disable the Nagle algorithm (TCP_NODELAY) on broker sockets.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>24</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket.max.fails</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 1000000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Disconnect from broker when this number of send failures (e.g., timed out requests) is reached. Disable with 0. WARNING: It is highly recommended to leave this setting at its default value of 1 to avoid the client and broker to become desynchronized in case of request timeouts. NOTE: The connection is automatically re-established.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>25</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>broker.address.ttl</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 86400000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>How long to cache the broker address resolving results (milliseconds).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>26</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>broker.address.family</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>any, v4, v6</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>any</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Allowed broker IP address families: any, v4, v6</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>27</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket.connection.setup.timeout.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1000 .. 2147483647</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>30000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Maximum time allowed for broker connection setup (TCP connection setup as well SSL and SASL handshake). If the connection to the broker is not fully functional after this the connection will be closed and retried.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>28</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>connections.max.idle.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 2147483647</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Close broker connections after the specified time of inactivity. Disable with 0. If this property is left at its default value some heuristics are performed to determine a suitable default value, this is currently limited to identifying brokers on Azure (see librdkafka issue #3109 for more info).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>29</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>reconnect.backoff.jitter.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 3600000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>DEPRECATED No longer used. See reconnect.backoff.ms and reconnect.backoff.max.ms.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>30</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>reconnect.backoff.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 3600000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>100</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>The initial time to wait before reconnecting to a broker after the connection has been closed. The time is increased exponentially until reconnect.backoff.max.ms is reached. -25% to +50% jitter is applied to each reconnect backoff. A value of 0 disables the backoff and reconnects immediately.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>31</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>reconnect.backoff.max.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 3600000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>10000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>The maximum time to wait before reconnecting to a broker after the connection has been closed.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>32</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>statistics.interval.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 86400000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>librdkafka statistics emit interval. The application also needs to register a stats callback using rd_kafka_conf_set_stats_cb(). The granularity is 1000ms. A value of 0 disables statistics.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>33</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>enabled_events</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 2147483647</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>See rd_kafka_conf_set_events()</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>34</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>error_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Error callback (set with rd_kafka_conf_set_error_cb())</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>35</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>throttle_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Throttle callback (set with rd_kafka_conf_set_throttle_cb())</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>36</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>stats_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Statistics callback (set with rd_kafka_conf_set_stats_cb())</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>37</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>log_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Log callback (set with rd_kafka_conf_set_log_cb())</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>38</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>log_level</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 7</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>6</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Logging level (syslog(3) levels)</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>39</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>log.queue</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Disable spontaneous log_cb from internal librdkafka threads, instead enqueue log messages on queue set with rd_kafka_set_log_queue() and serve log callbacks or events through the standard poll APIs. NOTE: Log messages will linger in a temporary queue until the log queue has been set.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>40</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>log.thread.name</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Print internal thread name in log messages (useful for debugging librdkafka internals)</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>41</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>enable.random.seed</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>If enabled librdkafka will initialize the PRNG with srand(current_time.milliseconds) on the first invocation of rd_kafka_new() (required only if rand_r() is not available on your platform). If disabled the application must call srand() prior to calling rd_kafka_new().</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>42</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>log.connection.close</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Log broker disconnects. It might be useful to turn this off when interacting with 0.9 brokers with an aggressive connections.max.idle.ms value.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>43</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>background_event_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Background queue event callback (set with rd_kafka_conf_set_background_event_cb())</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>44</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>socket_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Socket creation callback to provide race-free CLOEXEC</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>45</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>connect_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Socket connect callback</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>46</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>closesocket_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Socket close callback</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>47</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>open_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>File open callback to provide race-free CLOEXEC</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>48</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>resolve_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Address resolution callback (set with rd_kafka_conf_set_resolve_cb()).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>49</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>opaque</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Application opaque (set with rd_kafka_conf_set_opaque())</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>50</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>default_topic_conf</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Default topic configuration for automatically subscribed topics</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>51</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>internal.termination.signal</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 128</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Signal that librdkafka will use to quickly terminate on rd_kafka_destroy(). If this signal is not set then there will be a delay before rd_kafka_wait_destroyed() returns true as internal threads are timing out their system calls. If this signal is set however the delay will be minimal. The application should mask this signal as an internal signal handler is installed.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>52</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>api.version.request</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Request broker's supported API versions to adjust functionality to available protocol features. If set to false, or the ApiVersionRequest fails, the fallback version broker.version.fallback will be used. NOTE: Depends on broker version &gt;=0.10.0. If the request is not supported by (an older) broker the broker.version.fallback fallback is used.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>53</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>api.version.request.timeout.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>1 .. 300000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>10000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Timeout for broker API version requests.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>54</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>api.version.fallback.ms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 604800000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Dictates how long the broker.version.fallback fallback is used in the case the ApiVersionRequest fails. NOTE: The ApiVersionRequest is only issued when a new connection to the broker is made (such as after an upgrade).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>55</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>broker.version.fallback</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0.10.0</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>medium</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Older broker versions (before 0.10.0) provide no way for a client to query for supported protocol features (ApiVersionRequest, see api.version.request) making it impossible for the client to know what features it may use. As a workaround a user may set this property to the expected broker version and the client will automatically adjust its feature set accordingly if the ApiVersionRequest fails (or is disabled). The fallback broker version will be used for api.version.fallback.ms. Valid values are: 0.9.0, 0.8.2, 0.8.1, 0.8.0. Any other value &gt;= 0.10, such as 0.10.2.1, enables ApiVersionRequests.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>56</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>allow.auto.create.topics</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Allow automatic topic creation on the broker when subscribing to or assigning non-existent topics. The broker must also be configured with auto.create.topics.enable=true for this configuration to take effect. Note: the default value (true) for the producer is different from the default value (false) for the consumer. Further, the consumer default value is different from the Java consumer (true), and this property is not supported by the Java producer. Requires broker version &gt;= 0.11.0.0, for older broker versions only the broker configuration applies.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>57</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>security.protocol</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>plaintext, ssl, sasl_plaintext, sasl_ssl</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>plaintext</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Protocol used to communicate with brokers.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>58</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.cipher.suites</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>A cipher suite is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. See manual page for ciphers(1) and `SSL_CTX_set_cipher_list(3).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>59</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.curves.list</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>The supported-curves extension in the TLS ClientHello message specifies the curves (standard/named, or 'explicit' GF(2^k) or GF(p)) the client is willing to have the server use. See manual page for SSL_CTX_set1_curves_list(3). OpenSSL &gt;= 1.0.2 required.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>60</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.sigalgs.list</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>The client uses the TLS ClientHello signature_algorithms extension to indicate to the server which signature/hash algorithm pairs may be used in digital signatures. See manual page for SSL_CTX_set1_sigalgs_list(3). OpenSSL &gt;= 1.0.2 required.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>61</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.key.location</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Path to client's private key (PEM) used for authentication.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>62</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.key.password</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Private key passphrase (for use with ssl.key.location and set_ssl_cert())</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>63</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.key.pem</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Client's private key string (PEM format) used for authentication.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>64</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl_key</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Client's private key as set by rd_kafka_conf_set_ssl_cert()</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>65</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.certificate.location</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Path to client's public key (PEM) used for authentication.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>66</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.certificate.pem</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Client's public key string (PEM format) used for authentication.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>67</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl_certificate</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Client's public key as set by rd_kafka_conf_set_ssl_cert()</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>68</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.ca.location</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>File or directory path to CA certificate(s) for verifying the broker's key. Defaults: On Windows the system's CA certificates are automatically looked up in the Windows Root certificate store. On Mac OSX this configuration defaults to probe. It is recommended to install openssl using Homebrew, to provide CA certificates. On Linux install the distribution's ca-certificates package. If OpenSSL is statically linked or ssl.ca.location is set to probe a list of standard paths will be probed and the first one found will be used as the default CA certificate location path. If OpenSSL is dynamically linked the OpenSSL library's default path will be used (see OPENSSLDIR in openssl version -a).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>69</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.ca.pem</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>CA certificate string (PEM format) for verifying the broker's key.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>70</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl_ca</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>CA certificate as set by rd_kafka_conf_set_ssl_cert()</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>71</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.ca.certificate.stores</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Root</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Comma-separated list of Windows Certificate stores to load CA certificates from. Certificates will be loaded in the same order as stores are specified. If no certificates can be loaded from any of the specified stores an error is logged and the OpenSSL library's default CA location is used instead. Store names are typically one or more of: MY, Root, Trust, CA.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>72</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.crl.location</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Path to CRL for verifying broker's certificate validity.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>73</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.keystore.location</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Path to client's keystore (PKCS#12) used for authentication.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>74</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.keystore.password</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Client's keystore (PKCS#12) password.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>75</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.providers</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Comma-separated list of OpenSSL 3.0.x implementation providers. E.g., "default,legacy".</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>76</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.engine.location</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>DEPRECATED Path to OpenSSL engine library. OpenSSL &gt;= 1.1.x required. DEPRECATED: OpenSSL engine support is deprecated and should be replaced by OpenSSL 3 providers.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>77</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.engine.id</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>dynamic</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>OpenSSL engine id is the name used for loading engine.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>78</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl_engine_callback_data</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>OpenSSL engine callback data (set with rd_kafka_conf_set_engine_callback_data()).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>79</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>enable.ssl.certificate.verification</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Enable OpenSSL's builtin broker (server) certificate verification. This verification can be extended by the application by implementing a certificate_verify_cb.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>80</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.endpoint.identification.algorithm</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>none, https</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>https</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Endpoint identification algorithm to validate broker hostname using broker certificate. https - Server (broker) hostname verification as specified in RFC2818. none - No endpoint verification. OpenSSL &gt;= 1.0.2 required.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>81</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>ssl.certificate.verify_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Callback to verify the broker certificate chain.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>82</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.mechanisms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>GSSAPI</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>SASL mechanism to use for authentication. Supported: GSSAPI, PLAIN, SCRAM-SHA-256, SCRAM-SHA-512, OAUTHBEARER. NOTE: Despite the name only one mechanism must be configured.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>83</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.mechanism</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>GSSAPI</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Alias for sasl.mechanisms: SASL mechanism to use for authentication. Supported: GSSAPI, PLAIN, SCRAM-SHA-256, SCRAM-SHA-512, OAUTHBEARER. NOTE: Despite the name only one mechanism must be configured.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>84</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.kerberos.service.name</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>kafka</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Kerberos principal name that Kafka runs as, not including /hostname@REALM</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>85</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.kerberos.principal</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>kafkaclient</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>This client's Kerberos principal name. (Not supported on Windows, will use the logon user's principal).</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>86</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.kerberos.kinit.cmd</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>kinit -R -t "%{sasl.kerberos.keytab}" -k %{sasl.kerberos.principal} || kinit -t "%{sasl.kerberos.keytab}" -k %{sasl.kerberos.principal}</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Shell command to refresh or acquire the client's Kerberos ticket. This command is executed on client creation and every sasl.kerberos.min.time.before.relogin (0=disable). %{config.prop.name} is replaced by corresponding config object value.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>87</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.kerberos.keytab</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Path to Kerberos keytab file. This configuration property is only used as a variable in sasl.kerberos.kinit.cmd as  ... -t "%{sasl.kerberos.keytab}".</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>88</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.kerberos.min.time.before.relogin</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>0 .. 86400000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>60000</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Minimum time in milliseconds between key refresh attempts. Disable automatic key refresh by setting this property to 0.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>89</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.username</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>SASL username for use with the PLAIN and SASL-SCRAM-.. mechanisms</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>90</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.password</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>high</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>SASL password for use with the PLAIN and SASL-SCRAM-.. mechanism</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>91</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.oauthbearer.config</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>SASL/OAUTHBEARER configuration. The format is implementation-dependent and must be parsed accordingly. The default unsecured token implementation (see https://tools.ietf.org/html/rfc7515#appendix-A.5) recognizes space-separated name=value pairs with valid names including principalClaimName, principal, scopeClaimName, scope, and lifeSeconds. The default value for principalClaimName is "sub", the default value for scopeClaimName is "scope", and the default value for lifeSeconds is 3600. The scope value is CSV format with the default value being no/empty scope. For example: principalClaimName=azp principal=admin scopeClaimName=roles scope=role1,role2 lifeSeconds=600. In addition, SASL extensions can be communicated to the broker via extension_NAME=value. For example: principal=admin extension_traceId=123</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>92</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>enable.sasl.oauthbearer.unsecure.jwt</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>true, false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>false</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Enable the builtin unsecure JWT OAUTHBEARER token handler if no oauthbearer_refresh_cb has been set. This builtin handler should only be used for development or testing, and not in production.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>93</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>oauthbearer_token_refresh_cb</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>SASL/OAUTHBEARER token refresh callback (set with rd_kafka_conf_set_oauthbearer_token_refresh_cb(), triggered by rd_kafka_poll(), et.al. This callback will be triggered when it is time to refresh the client's OAUTHBEARER token. Also see rd_kafka_conf_enable_sasl_queue().</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>94</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.oauthbearer.method</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>default, oidc</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>default</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Set to "default" or "oidc" to control which login method to be used. If set to "oidc", the following properties must also be be specified: sasl.oauthbearer.client.id, sasl.oauthbearer.client.secret, and sasl.oauthbearer.token.endpoint.url.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>95</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.oauthbearer.client.id</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Public identifier for the application. Must be unique across all clients that the authorization server handles. Only used when sasl.oauthbearer.method is set to "oidc".</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>96</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.oauthbearer.client.secret</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Client secret only known to the application and the authorization server. This should be a sufficiently random string that is not guessable. Only used when sasl.oauthbearer.method is set to "oidc".</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>97</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.oauthbearer.scope</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Client use this to specify the scope of the access request to the broker. Only used when sasl.oauthbearer.method is set to "oidc".</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>98</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.oauthbearer.extensions</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Allow additional information to be provided to the broker. Comma-separated list of key=value pairs. E.g., "supportFeatureX=true,organizationId=sales-emea".Only used when sasl.oauthbearer.method is set to "oidc".</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>99</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>sasl.oauthbearer.token.endpoint.url</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>OAuth/OIDC issuer token endpoint HTTP(S) URI used to retrieve token. Only used when sasl.oauthbearer.method is set to "oidc".</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>100</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>plugin.library.paths</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>List of plugin libraries to load (; separated). The library search path is platform dependent (see dlopen(3) for Unix and LoadLibrary() for Windows). If no filename extension is specified the platform-specific extension (such as .dll or .so) will be appended automatically.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<rowsItem>
		<index>101</index>
		<row>
			<c>
				<c>
					<f>11</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>interceptors</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>low</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
			<c>
				<c>
					<f>12</f>
					<tl>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Interceptors added through rd_kafka_conf_interceptor_add_..() and any configuration handled by interceptors.</v8:content>
						</v8:item>
					</tl>
				</c>
			</c>
		</row>
	</rowsItem>
	<templateMode>true</templateMode>
	<defaultFormatIndex>13</defaultFormatIndex>
	<height>102</height>
	<vgRows>102</vgRows>
	<line width="1" gap="false">
		<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
	</line>
	<font faceName="Arial" height="8" bold="true" italic="false" underline="false" strikeout="false" kind="Absolute" scale="100"/>
	<format>
		<width>258</width>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<width>147</width>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<width>199</width>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<width>383</width>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<font>0</font>
		<border>0</border>
		<width>258</width>
		<verticalAlignment>Center</verticalAlignment>
		<backColor>style:ButtonBackColor</backColor>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<font>0</font>
		<border>0</border>
		<width>147</width>
		<verticalAlignment>Center</verticalAlignment>
		<backColor>style:ButtonBackColor</backColor>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<font>0</font>
		<border>0</border>
		<width>199</width>
		<verticalAlignment>Center</verticalAlignment>
		<backColor>style:ButtonBackColor</backColor>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<font>0</font>
		<border>0</border>
		<width>72</width>
		<verticalAlignment>Center</verticalAlignment>
		<backColor>style:ButtonBackColor</backColor>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<font>0</font>
		<border>0</border>
		<width>383</width>
		<verticalAlignment>Center</verticalAlignment>
		<backColor>style:ButtonBackColor</backColor>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<font>0</font>
		<border>0</border>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<border>0</border>
		<textPlacement>Wrap</textPlacement>
	</format>
	<format>
		<width>72</width>
	</format>
</document>